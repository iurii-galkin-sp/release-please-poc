# REASON: This workflow implements the "finalization" stage of our release process.
# It runs on every push to 'main' to create Git tags and GitHub Releases.
name: '2. Release Please - Finalize'

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please-release:
    name: 'Create Git Tags and GitHub Releases'
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}

    steps:
      # REASON: This step checks out the repository code, so that release-please
      # can access the configuration files. It is a mandatory prerequisite.
      - uses: actions/checkout@v4

      - name: 'Run Release Please to create releases'
        id: release
        uses: googleapis/release-please-action@v4
        with:
          # REASON: This flag instructs the action to ONLY create the GitHub release.
          # It skips the PR creation step, as we are acting on an already-merged PR.
          skip-github-pull-request: true
          
          # REASON: These inputs point to our manifest-based monorepo configuration.
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          token: ${{ secrets.GITHUB_TOKEN }}

  # A downstream job that runs only if a release was actually created.
  notify:
    name: 'Notify on Release'
    runs-on: ubuntu-latest
    needs: release-please-release
    if: ${{ needs.release-please-release.outputs.releases_created }}
    steps:
      - name: 'Send notification'
        run: echo "A new release was successfully created."